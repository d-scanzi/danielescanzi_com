filter(question == questions[1]) %>%
replace_na(list(answers= "unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size = 0.33,
colour = "white",
flip = F,
make_proportional = TRUE)
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size = 1.24,
colour = "white",
flip = F,
make_proportional = TRUE)
?waffle
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size = 1.24,
colour = "white",
flip = F,
make_proportional = TRUE,
reverse = T)
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size = 1.24,
colour = "white",
flip = F,
make_proportional = TRUE,
reverse = T)
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size = 1.24,
colour = "white",
flip = F,
make_proportional = TRUE,
reverse = F)
colors = c("purple", "#008080", "gray")
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size = 1.24,
colour = "white",
flip = F,
make_proportional = TRUE,
colors = c("purple", "#008080", "gray"))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size = 1.24,
colour = "white",
flip = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("purple", "#008080", "gray"))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size = 1.24,
colour = "white",
flip = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray"))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size = 1.24,
colour = "white",
flip = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray"))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size = 1.24,
colour = "black",
flip = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray"))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size = 1.24,
flip = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray"))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = none,
flip   = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray"))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = NULL,
flip   = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray"))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = "white",
flip   = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray"))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = "white",
flip   = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
theme_enhance_waffle()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = "white",
flip   = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
theme_minimal()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = "white",
flip   = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
theme_void()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = "white",
flip   = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
theme_void() +
theme_enhance_waffle()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
theme_void() +
theme_enhance_waffle()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "medkit") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
theme_void() +
theme_enhance_waffle()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "medkit") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
theme_void() +
theme_enhance_waffle()
fa_list()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
theme_void() +
theme_enhance_waffle()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray"))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1.24,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
theme_void() +
theme_enhance_waffle()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 0.33,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
theme_void() +
theme_enhance_waffle()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 0.66,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
theme_void() +
theme_enhance_waffle()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 0.66,
color  = "white",
flip   = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
coord_equal() +
theme_void() +
theme_enhance_waffle()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 0.66,
color  = "white",
flip   = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
labs(fill = "") +
coord_equal() +
theme_void() +
theme_enhance_waffle()
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 0.66,
color  = "white",
flip   = F,
make_proportional = TRUE) +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
labs(fill = "") +
coord_equal() +
theme_void() +
theme(panel.background = element_rect(fill='transparent', color=NA),
plot.background  = element_rect(fill='transparent', color=NA))
library(extrafont)
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 0.66,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
labs(fill = "") +
coord_equal() +
theme_void() +
theme(panel.background = element_rect(fill='transparent', color=NA),
plot.background  = element_rect(fill='transparent', color=NA))
library(fontawesome)
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 0.66,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
labs(fill = "") +
coord_equal() +
theme_void() +
theme(panel.background = element_rect(fill='transparent', color=NA),
plot.background  = element_rect(fill='transparent', color=NA))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 0.66,
color  = "transparent",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
labs(fill = "") +
coord_equal() +
theme_void() +
theme(panel.background = element_rect(fill='transparent', color=NA),
plot.background  = element_rect(fill='transparent', color=NA))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 0.66,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
labs(fill = "") +
coord_equal() +
theme_minimal() +
theme(panel.background = element_rect(fill='transparent', color=NA),
plot.background  = element_rect(fill='transparent', color=NA))
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 0.66,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
labs(fill = "") +
coord_equal() +
theme_void() +
theme(
panel.background = element_rect(fill='transparent', color=NA),
plot.background  = element_rect(fill='transparent', color=NA)
)
marks_plot <- raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
#size   = 0.66,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
labs(fill = "") +
coord_equal() +
theme_void() +
theme(
panel.background = element_rect(fill='transparent', color=NA),
plot.background  = element_rect(fill='transparent', color=NA)
)
#| echo: false
#| message: false
#| warning: false
marks_plot
marks_plot <- raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 2,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
labs(fill = "") +
coord_equal() +
theme_void() +
theme(
panel.background = element_rect(fill='transparent', color=NA),
plot.background  = element_rect(fill='transparent', color=NA)
)
```{r, dev = "png", dev.args=list(bg="transparent")}
#| echo: false
#| message: false
#| warning: false
marks_plot
marks_plot <- raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1,
color  = "white",
flip   = F,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray")) +
labs(fill = "") +
coord_equal() +
theme_void() +
theme(
panel.background = element_rect(fill='transparent', color=NA),
plot.background  = element_rect(fill='transparent', color=NA)
)
