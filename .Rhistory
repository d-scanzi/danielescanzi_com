guides(fill = guide_legend(nrow = 1, reverse = T)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
legend.background = element_rect(fill="transparent", color=NA),
panel.background = element_rect(fill="#f8f4ea", color=NA),
plot.background  = element_rect(fill="#f8f4ea", color=NA),
legend.position = "bottom"
) +
scale_y_discrete(expand = expansion(mult = .1)) +
scale_x_continuous(labels = scales::percent)
#| echo: false
#| message: false
#| warning: false
grade_plot
#| echo: false
#| message: false
#| warning: false
question_2_percentages <- raw_feedback %>%
filter(question == questions[2]) %>%
replace_na(list(answers="Unanswered")) %>%
table() %>%
prop.table() %>%
as_tibble()
question_2_percentages$answers <- factor(question_2_percentages$answers, levels = c("A+", "A", "A-", "B+", "B", "B-", "Unanswered"))
grade_plot <- question_2_percentages %>%
ggplot(aes(y=question, x=n, fill=answers)) +
geom_col(position = "fill", width = .15) +
geom_text(aes(label = paste0(round(n * 100), "%")),
position = position_fill(vjust = 0.5),
size = 4) +
labs(fill  ="",
title = "What grade do you think I should recieve as a tutor?") +
scale_fill_brewer(palette="BuGn", direction = -1) +
guides(fill = guide_legend(nrow = 1, reverse = T)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
legend.background = element_rect(fill="transparent", color=NA),
panel.background = element_rect(fill="#f8f4ea", color=NA),
plot.background  = element_rect(fill="#f8f4ea", color=NA),
legend.position = "bottom",
plot.title = element_text(hjust = .5)
) +
scale_y_discrete(expand = expansion(mult = .1)) +
scale_x_continuous(labels = scales::percent)
#| echo: false
#| message: false
#| warning: false
grade_plot
View(question_2_percentages)
46+33+9+4+4+4
46+33+9
#| echo: false
#| output: false
#| warning: false
#| message: false
library(tidyverse)
library(janitor)
library(here)
library(wordcloud2)
library(kableExtra)
library(waffle)
library(glue)
# Load data and set it up appropriately
raw_feedback <- read_csv(here('educating','data', 'feedback_collected.csv'))
questions    <- colnames(raw_feedback)
raw_feedback <- raw_feedback %>%
pivot_longer(cols = everything(),
names_to = 'question',
values_to = 'answers')
#| echo: false
#| message: false
#| warning: false
#| fig-cap: "Describe me as a tutor in three words. A summary of the responses collected so far"
descriptors <- raw_feedback %>%
filter(question %in% questions[5:9]) %>%
mutate(answers = tolower(answers)) %>%
drop_na() %>%
group_by(answers) %>%
summarise(freq = n()) %>%
rename(word = answers)
wordcloud2(descriptors, minRotation = -pi/2, maxRotation = -pi/2, backgroundColor = '#f8f4ea')
#| echo: false
#| message: false
#| warning: false
# Compute percentages
question_1_percentages <- raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers="Unanswered")) %>%
table() %>%
prop.table()
marks_plot <- raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1,
color  = "#f8f4ea",
flip   = T,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray"),
labels = c(glue("Above Average\n({round(question_1_percentages[1]*100)}%)"),
glue("Average\n({round(question_1_percentages[2]*100)}%)"),
glue("Not Responded\n({round(question_1_percentages[3]*100)}%)"))
) +
labs(fill = "",
title = "How would your rate my tutorials\n compared to other tutorials/classes?") +
coord_equal() +
theme_void() +
theme(
panel.background = element_rect(fill="#f8f4ea", color=NA),
plot.background  = element_rect(fill="#f8f4ea", color=NA),
legend.position = "bottom",
legend.margin = margin(0,0,5,0),
plot.title = element_text(hjust = .5)
)
#| echo: false
#| message: false
#| warning: false
question_2_percentages <- raw_feedback %>%
filter(question == questions[2]) %>%
replace_na(list(answers="Unanswered")) %>%
table() %>%
prop.table() %>%
as_tibble()
question_2_percentages$answers <- factor(question_2_percentages$answers, levels = c("A+", "A", "A-", "B+", "B", "B-", "Unanswered"))
grade_plot <- question_2_percentages %>%
ggplot(aes(y=question, x=n, fill=answers)) +
geom_col(position = "fill", width = .15) +
geom_text(aes(label = paste0(round(n * 100), "%")),
position = position_fill(vjust = 0.5),
size = 4) +
labs(fill  ="",
title = "What grade do you think I should recieve as a tutor?") +
scale_fill_brewer(palette="BuGn", direction = -1) +
guides(fill = guide_legend(nrow = 1, reverse = T)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
legend.background = element_rect(fill="transparent", color=NA),
panel.background = element_rect(fill="#f8f4ea", color=NA),
plot.background  = element_rect(fill="#f8f4ea", color=NA),
legend.position = "bottom",
plot.title = element_text(hjust = .5)
) +
scale_y_discrete(expand = expansion(mult = .1)) +
scale_x_continuous(labels = scales::percent)
#| echo: false
#| message: false
#| warning: false
grade_plot
#| echo: false
#| message: false
#| warning: false
question_2_percentages <- raw_feedback %>%
filter(question == questions[2]) %>%
replace_na(list(answers="Unanswered")) %>%
table() %>%
prop.table() %>%
as_tibble()
question_2_percentages$answers <- factor(question_2_percentages$answers, levels = c("A+", "A", "A-", "B+", "B", "B-", "Unanswered"))
grade_plot <- question_2_percentages %>%
ggplot(aes(y=question, x=n, fill=answers)) +
geom_col(position = "fill", width = .15) +
geom_text(aes(label = paste0(round(n * 100), "%")),
position = position_fill(vjust = 0.5),
size = 4) +
labs(fill  ="",
title = "What grade do you think I should recieve as a tutor?") +
#scale_fill_brewer(palette="BuGn", direction = -1) +
guides(fill = guide_legend(nrow = 1, reverse = T)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
legend.background = element_rect(fill="transparent", color=NA),
panel.background = element_rect(fill="#f8f4ea", color=NA),
plot.background  = element_rect(fill="#f8f4ea", color=NA),
legend.position = "bottom",
plot.title = element_text(hjust = .5)
) +
scale_y_discrete(expand = expansion(mult = .1)) +
scale_x_continuous(labels = scales::percent)
#| echo: false
#| message: false
#| warning: false
grade_plot
#| echo: false
#| output: false
#| warning: false
#| message: false
library(tidyverse)
library(janitor)
library(here)
library(wordcloud2)
library(kableExtra)
library(waffle)
library(glue)
# Load data and set it up appropriately
raw_feedback <- read_csv(here('educating','data', 'feedback_collected.csv'))
questions    <- colnames(raw_feedback)
raw_feedback <- raw_feedback %>%
pivot_longer(cols = everything(),
names_to = 'question',
values_to = 'answers')
#| echo: false
#| message: false
#| warning: false
#| fig-cap: "Describe me as a tutor in three words. A summary of the responses collected so far"
descriptors <- raw_feedback %>%
filter(question %in% questions[5:9]) %>%
mutate(answers = tolower(answers)) %>%
drop_na() %>%
group_by(answers) %>%
summarise(freq = n()) %>%
rename(word = answers)
wordcloud2(descriptors, minRotation = -pi/2, maxRotation = -pi/2, backgroundColor = '#f8f4ea')
#| echo: false
#| message: false
#| warning: false
# Compute percentages
question_1_percentages <- raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers="Unanswered")) %>%
table() %>%
prop.table()
marks_plot <- raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1,
color  = "#f8f4ea",
flip   = T,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray"),
labels = c(glue("Above Average\n({round(question_1_percentages[1]*100)}%)"),
glue("Average\n({round(question_1_percentages[2]*100)}%)"),
glue("Not Responded\n({round(question_1_percentages[3]*100)}%)"))
) +
labs(fill = "",
title = "How would your rate my tutorials\n compared to other tutorials/classes?") +
coord_equal() +
theme_void() +
theme(
panel.background = element_rect(fill="#f8f4ea", color=NA),
plot.background  = element_rect(fill="#f8f4ea", color=NA),
legend.position = "bottom",
legend.margin = margin(0,0,5,0),
plot.title = element_text(hjust = .5)
)
#| echo: false
#| message: false
#| warning: false
marks_plot
question_1_percentages
raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers="Unanswered")) %>%
table()
raw_feedback %>%
filter(question == questions[1])
#| echo: false
#| output: false
#| warning: false
#| message: false
library(tidyverse)
library(janitor)
library(here)
library(wordcloud2)
library(kableExtra)
library(waffle)
library(glue)
# Load data and set it up appropriately
raw_feedback <- read_csv(here('educating','data', 'feedback_collected.csv'))
questions    <- colnames(raw_feedback)
raw_feedback <- raw_feedback %>%
pivot_longer(cols = everything(),
names_to = 'question',
values_to = 'answers')
#| echo: false
#| message: false
#| warning: false
#| fig-cap: "Describe me as a tutor in three words. A summary of the responses collected so far"
descriptors <- raw_feedback %>%
filter(question %in% questions[5:9]) %>%
mutate(answers = tolower(answers)) %>%
drop_na() %>%
group_by(answers) %>%
summarise(freq = n()) %>%
rename(word = answers)
wordcloud2(descriptors, minRotation = -pi/2, maxRotation = -pi/2, backgroundColor = '#f8f4ea')
#| echo: false
#| message: false
#| warning: false
# Compute percentages
question_1_percentages <- raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers="Unanswered")) %>%
table() %>%
prop.table()
marks_plot <- raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1,
color  = "#f8f4ea",
flip   = T,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray"),
labels = c(glue("Above Average\n({round(question_1_percentages[1]*100)}%)"),
glue("Average\n({round(question_1_percentages[2]*100)}%)"),
glue("Not Responded\n({round(question_1_percentages[3]*100)}%)"))
) +
labs(fill = "",
title = "How would your rate my tutorials\n compared to other tutorials/classes?") +
coord_equal() +
theme_void() +
theme(
panel.background = element_rect(fill="#f8f4ea", color=NA),
plot.background  = element_rect(fill="#f8f4ea", color=NA),
legend.position = "bottom",
legend.margin = margin(0,0,5,0),
plot.title = element_text(hjust = .5)
)
question_1_percentages
#| echo: false
#| output: false
#| warning: false
#| message: false
library(tidyverse)
library(janitor)
library(here)
library(wordcloud2)
library(kableExtra)
library(waffle)
library(glue)
# Load data and set it up appropriately
raw_feedback <- read_csv(here('educating','data', 'feedback_collected.csv'))
questions    <- colnames(raw_feedback)
raw_feedback <- raw_feedback %>%
pivot_longer(cols = everything(),
names_to = 'question',
values_to = 'answers')
#| echo: false
#| message: false
#| warning: false
#| fig-cap: "Describe me as a tutor in three words. A summary of the responses collected so far"
descriptors <- raw_feedback %>%
filter(question %in% questions[5:9]) %>%
mutate(answers = tolower(answers)) %>%
drop_na() %>%
group_by(answers) %>%
summarise(freq = n()) %>%
rename(word = answers)
wordcloud2(descriptors, minRotation = -pi/2, maxRotation = -pi/2, backgroundColor = '#f8f4ea')
#| echo: false
#| message: false
#| warning: false
# Compute percentages
question_1_percentages <- raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers="Unanswered")) %>%
table() %>%
prop.table()
marks_plot <- raw_feedback %>%
filter(question == questions[1]) %>%
replace_na(list(answers= "Unanswered")) %>%
count(answers) %>%
ggplot(aes(fill = answers, values = n)) +
geom_waffle(n_rows = 10,
size   = 1,
color  = "#f8f4ea",
flip   = T,
make_proportional = TRUE,
use_glyph = "graduation-cap") +
scale_fill_manual(values = c("#008080", "purple" , "gray"),
labels = c(glue("Above Average\n({round(question_1_percentages[1]*100)}%)"),
glue("Average\n({round(question_1_percentages[2]*100)}%)"),
glue("Not Responded\n({round(question_1_percentages[3]*100)}%)"))
) +
labs(fill = "",
title = "How would your rate my tutorials\n compared to other tutorials/classes?") +
coord_equal() +
theme_void() +
theme(
panel.background = element_rect(fill="#f8f4ea", color=NA),
plot.background  = element_rect(fill="#f8f4ea", color=NA),
legend.position = "bottom",
legend.margin = margin(0,0,5,0),
plot.title = element_text(hjust = .5)
)
#| echo: false
#| message: false
#| warning: false
marks_plot
#| echo: false
#| message: false
#| warning: false
marks_plot
#| echo: false
#| message: false
#| warning: false
question_2_percentages <- raw_feedback %>%
filter(question == questions[2]) %>%
replace_na(list(answers="Unanswered")) %>%
table() %>%
prop.table() %>%
as_tibble()
question_2_percentages$answers <- factor(question_2_percentages$answers, levels = c("A+", "A", "A-", "B+", "B", "B-", "Unanswered"))
grade_plot <- question_2_percentages %>%
ggplot(aes(y=question, x=n, fill=answers)) +
geom_col(position = "fill", width = .15) +
geom_text(aes(label = paste0(round(n * 100), "%")),
position = position_fill(vjust = 0.5),
size = 4) +
labs(fill  ="",
title = "What grade do you think I should recieve as a tutor?") +
#scale_fill_brewer(palette="BuGn", direction = -1) +
guides(fill = guide_legend(nrow = 1, reverse = T)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
legend.background = element_rect(fill="transparent", color=NA),
panel.background = element_rect(fill="#f8f4ea", color=NA),
plot.background  = element_rect(fill="#f8f4ea", color=NA),
legend.position = "bottom",
plot.title = element_text(hjust = .5)
) +
scale_y_discrete(expand = expansion(mult = .1)) +
scale_x_continuous(labels = scales::percent)
#| echo: false
#| message: false
#| warning: false
grade_plot
View(marks_2)
#| echo: false
#| message: false
#| warning: false
question_2_percentages <- raw_feedback %>%
filter(question == questions[2]) %>%
replace_na(list(answers="Unanswered")) %>%
table() %>%
prop.table() %>%
as_tibble()
question_2_percentages$answers <- factor(question_2_percentages$answers, levels = c("A+", "A", "A-", "B+", "B", "B-", "Unanswered"))
grade_plot <- question_2_percentages %>%
ggplot(aes(y=question, x=n, fill=answers)) +
geom_col(position = "fill", width = .15) +
geom_text(aes(label = paste0(round(n * 100), "%")),
position = position_fill(vjust = 0.5),
size = 4) +
labs(fill  ="",
title = "What grade do you think I should recieve as a tutor?") +
scale_fill_brewer(palette="BuGn", direction = -1) +
guides(fill = guide_legend(nrow = 1, reverse = T)) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
legend.background = element_rect(fill="transparent", color=NA),
panel.background = element_rect(fill="#f8f4ea", color=NA),
plot.background  = element_rect(fill="#f8f4ea", color=NA),
legend.position = "bottom",
plot.title = element_text(hjust = .5)
) +
scale_y_discrete(expand = expansion(mult = .1)) +
scale_x_continuous(labels = scales::percent)
#| echo: false
#| message: false
#| warning: false
grade_plot
1/80
100/15
1/6
87/2
?format:
html:
page-layout: full
?scroll_box
kable_material
?kable_material
