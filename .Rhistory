sdt
sdt_gif
anim_save('sdt_animation.gif', sdt_gif, path = 'C:\\Users\\scanzid\\OneDrive - The University of Auckland\\PhD\\wahapu_documents\\first_year')
sdt_an <- sdt_df %>%
ggplot(aes(x = -20, y = alpha)) +
geom_point(shape = 1, size = 8, stroke = 5, show.legend = FALSE, colour = "#4A1BE4") +
geom_vline(aes(xintercept = line), linewidth = 2, colour = "#D9F852") +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
legend.position="bottom"
) +
transition_states(frames, wrap = TRUE, transition_length = 0)
sdt_gif <- animate(sdt_an, fps = 60, rewind = TRUE, renderer = gifski_renderer())
anim_save('sdt_animation.gif', sdt_gif, path = 'C:\\Users\\scanzid\\OneDrive - The University of Auckland\\PhD\\wahapu_documents\\first_year')
sdt_df %>%
ggplot(aes(x = -20, y = alpha)) +
geom_point(shape = 1, size = 8, stroke = 5, show.legend = FALSE, colour = "#4A1BE4") +
geom_vline(aes(xintercept = line), linewidth = 2, colour = "#D9F852") +
annotate("text", x = line+3, y = 0.2, label = "yes", colour = "white") +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
legend.position="bottom"
) +
transition_states(frames, wrap = TRUE, transition_length = 0)
sdt_df %>%
ggplot(aes(x = -20, y = alpha)) +
geom_point(shape = 1, size = 8, stroke = 5, show.legend = FALSE, colour = "#4A1BE4") +
geom_vline(aes(xintercept = line), linewidth = 2, colour = "#D9F852") +
annotate("text", aes(x = line+3, y = 0.2), label = "yes", colour = "white") +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
legend.position="bottom"
) +
transition_states(frames, wrap = TRUE, transition_length = 0)
sine_time <- seq(0, 2, by = 0.1)
sine_wave <- sin(2*pi*2*sine_time)
plot(sine_wave)
sine_time <- seq(0, 2, by = .01)
sine_wave <- sin(2*pi*2*sine_time)
plot(sine_wave)
rnorm(10)
sine_time <-
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*sine_time),
noisy = wave + rnorm(length(wave))
)
sine_wave %>%
ggplot(aes(x = time, wave)) +
geom_line()
sine_time <-
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*sine_time),
noisy = wave + rnorm(length(wave))*5
)
sine_wave %>%
ggplot(aes(x = time, wave)) +
geom_line()
sine_time <-
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*sine_time),
noisy = wave + (rnorm(length(wave)) * 10)
)
sine_wave %>%
ggplot(aes(x = time, wave)) +
geom_line()
View(sine_wave)
rnorm(10)
rnorm(10) * 10
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*sine_time),
noisy = wave + (rnorm(length(wave)) * 10)
)
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*sine_time),
noisy = wave + (rnorm(length(wave)) * 10)
)
sine_wave %>%
ggplot(aes(x = time, wave)) +
geom_line()
View(sine_wave)
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*sine_time),
noisy = wave + (rnorm(length(wave)) * 10)
)
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*sine_time),
noisy = wave + (rnorm(length(wave)) * 10)
)
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*time),
noisy = wave + (rnorm(length(wave)) * 10)
)
View(sine_wave)
sine_wave %>%
ggplot(aes(x = time, wave)) +
geom_line()
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*time),
noisy = wave + (rnorm(length(wave)) * 100)
)
sine_wave %>%
ggplot(aes(x = time, wave)) +
geom_line()
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*time),
noisy = wave + (rnorm(length(wave)) * 1000)
)
sine_wave %>%
ggplot(aes(x = time, wave)) +
geom_line()
sine_wave %>%
ggplot(aes(x = time, noisy)) +
geom_line()
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*time),
noisy = wave + (rnorm(length(wave)) * 10)
)
sine_wave %>%
ggplot(aes(x = time, noisy)) +
geom_line()
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*time),
noisy = wave + (rnorm(length(wave)) * 5)
)
sine_wave %>%
ggplot(aes(x = time, noisy)) +
geom_line()
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*time),
noisy = wave + (rnorm(length(wave)) * 2)
)
sine_wave %>%
ggplot(aes(x = time, noisy)) +
geom_line()
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*time),
noisy = wave + (rnorm(length(wave)))
)
sine_wave %>%
ggplot(aes(x = time, noisy)) +
geom_line()
2^2
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*time),
noisy = wave + rnorm(length(wave)),
residuals = (noisy - wave) ^ 2
) %>%
pivot_longer(!time,
names_to = "function",
values_to = "value")
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*time),
noisy = wave + rnorm(length(wave)),
residuals = (noisy - wave) ^ 2
) %>%
pivot_longer(!time,
names_to = "element",
values_to = "value")
sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line() +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
legend.position="bottom"
)
sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line() +
facet_wrap(~element, ncol = 1) +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
legend.position="bottom"
)
sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line() +
facet_wrap(~element, ncol = 1) +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
legend.position= element_blank()
)
sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line(show.legend = FALSE) +
facet_wrap(~element, ncol = 1) +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
strip.background = element_blank(),
strip.text.x = element_blank()
)
sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line(show.legend = FALSE, linewidth = 2) +
facet_wrap(~element, ncol = 1) +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
strip.background = element_blank(),
strip.text.x = element_blank()
)
sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line(show.legend = FALSE, linewidth = 1.3) +
facet_wrap(~element, ncol = 1) +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
strip.background = element_blank(),
strip.text.x = element_blank()
)
sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line(show.legend = FALSE, linewidth = 1.3) +
facet_wrap(~element, ncol = 1) +
scale_colour_manual(values = c("#D9F852", "#4A1BE4", "#95928C"))
sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line(show.legend = FALSE, linewidth = 1.3) +
facet_wrap(~element, ncol = 1) +
scale_colour_manual(values = c("#D9F852", "#4A1BE4", "#95928C")) +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
strip.background = element_blank(),
strip.text.x = element_blank()
)
sine_plot <- sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line(show.legend = FALSE, linewidth = 1.3) +
facet_wrap(~element, ncol = 1) +
scale_colour_manual(values = c("#D9F852", "#4A1BE4", "#95928C")) +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
strip.background = element_blank(),
strip.text.x = element_blank()
)
ggsave('C:\\Users\\scanzid\\OneDrive - The University of Auckland\\PhD\\wahapu_documents\\first_year\\sine_plot.svg', sine_plot, bg='transparent')
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*time),
noisy = wave + rnorm(length(wave)),
residuals = (noisy - wave) ^ 2.5
) %>%
pivot_longer(!time,
names_to = "element",
values_to = "value")
sine_plot <- sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line(show.legend = FALSE, linewidth = 1.3) +
facet_wrap(~element, ncol = 1) +
scale_colour_manual(values = c("#D9F852", "#4A1BE4", "#95928C")) +
theme(
panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
strip.background = element_blank(),
strip.text.x = element_blank()
)
ggsave('C:\\Users\\scanzid\\OneDrive - The University of Auckland\\PhD\\wahapu_documents\\first_year\\sine_plot_1.svg', sine_plot, bg='transparent')
sine_plot <- sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line(show.legend = FALSE, linewidth = 1.7) +
facet_wrap(~element, ncol = 1) +
scale_colour_manual(values = c("#D9F852", "#4A1BE4", "#95928C")) +
theme(
panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
strip.background = element_blank(),
strip.text.x = element_blank()
)
ggsave('C:\\Users\\scanzid\\OneDrive - The University of Auckland\\PhD\\wahapu_documents\\first_year\\sine_plot_2.svg', sine_plot, bg='transparent')
sine_plot <- sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line(show.legend = FALSE, linewidth = 1.7) +
facet_wrap(~element, ncol = 1) +
scale_colour_manual(values = c("#D9F852", "#4A1BE4", "#95928C")) +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
strip.background = element_blank(),
strip.text.x = element_blank()
)
ggsave('C:\\Users\\scanzid\\OneDrive - The University of Auckland\\PhD\\wahapu_documents\\first_year\\sine_plot_2.svg', sine_plot, bg='transparent')
sine_wave <- tibble(
time  = seq(0, 2, by = .01),
wave  = sin(2*pi*2*time),
noisy = wave + rnorm(length(wave)) * 2.5,
residuals = (noisy - wave) ^ 2.5
) %>%
pivot_longer(!time,
names_to = "element",
values_to = "value")
sine_plot <- sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line(show.legend = FALSE, linewidth = 1.7) +
facet_wrap(~element, ncol = 1) +
scale_colour_manual(values = c("#D9F852", "#4A1BE4", "#95928C")) +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
strip.background = element_blank(),
strip.text.x = element_blank()
)
ggsave('C:\\Users\\scanzid\\OneDrive - The University of Auckland\\PhD\\wahapu_documents\\first_year\\sine_plot_2.svg', sine_plot, bg='transparent')
sine_plot <- sine_wave %>%
ggplot(aes(x = time, y = value, colour = element)) +
geom_line(show.legend = FALSE, linewidth = 1.2) +
facet_wrap(~element, ncol = 1) +
scale_colour_manual(values = c("#D9F852", "#4A1BE4", "#95928C")) +
theme(
panel.background = element_rect(fill='black'), #transparent panel bg
plot.background = element_rect(fill='black', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent'), #transparent legend panel
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
text=element_text(size=16,  family="Open Sans"),
strip.background = element_blank(),
strip.text.x = element_blank()
)
ggsave('C:\\Users\\scanzid\\OneDrive - The University of Auckland\\PhD\\wahapu_documents\\first_year\\sine_plot_2.svg', sine_plot, bg='transparent')
3*0.25
4/25
12/25
4/5
1/5
0.2*4
1/4 * 3/4
alpha <- 0
beta <- 0.5
sigma <- 5
n_ind <- 100
H <- runif(n_ind, 130, 170)
mu <- alpha + beta*H
W <- rnorm(n_ind, mu, sigma)
plot(H)
plot(W)
plot(H, W)
n_samples <- 10
alpha <- rnorm(n_samples, 0, 1)
beta <- rnorm(n_samples, 0, 1)
plot(NULL, xlim = c(-2,2), ylim = c(-2, 2), xlab = "x", ylab = "y")
for (i in 1:n_samples) {abline(alpha[i], beta[i], lwd=4, col=2)}
mu    <- seq(150, 160, length.out = 100)
sigma <- seq(7, 9, length.out = 100)
posterior <- expand.grid(mu = mu, sigma = sigma)
View(posterior)
?expand grid
?expand.grid
?LINK
