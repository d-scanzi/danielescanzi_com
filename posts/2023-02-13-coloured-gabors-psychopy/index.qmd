---
title: "Creating coloured Gabor stimuli with Psychopy"
author: "Daniele Scanzi"
date: "2023/02/13"
description: "How to use Psychopy to create coloured Gabor patches or grating stimuli" 
categories: [Python, coding, experiments]
---


## Gabor patches in Psychopy

Some of the work I am involved in requires the use of Gabor patches. These are formally defined as *sinusoidal gratings convolved with a Gaussian kernel*. The definition looks scarier than it is. Let's look to a Gabor to understand why

As you can see, this stimulus is pretty simple, a bunch of black and white stripes that fade along their extremities. *Lines* and *fading* are the key points to understanding the definition. Indeed, we can create a parallel between *lines* and *sinusoidal grating* and between *fading* and *Gaussian kernel*. 

To create a series of black-and-white lines, we can use a sinusoid. Think about this, a sinusoid is a function that fluctuates up and down. We can use it to describe continuous and repeating fluctuations between two states, for instance, between two **opposite** colours, like black and white. To do this, we set that the peak value of the sinusoid represents black, while the trough value black. Everything in between is a graded shade of grey.

```{r}
library(tidyverse)

samples  <- seq(1, 10, by = 0.0001)
sinusoid <- sin(2*pi*1*samples)

simple_sine <- data.frame(x = samples, y = sinusoid) %>% 
    ggplot(aes(x=x, y=y)) +
    geom_line(size = 1.5) +
    theme_minimal()

data.frame(x = samples, y = sinusoid) %>% 
    ggplot(aes(x=x, y=y, colour = sinusoid)) +
    geom_line(size = 1.5) +
    scale_colour_gradient(low = "black", high = "white") +
    theme_minimal()

```

